Namespace(batch_size=500, bce_lambda=1.0, bec_p=0.0, bec_p_dec=0.0, ber_lambda=1.0, block_len=100, block_len_high=200, block_len_low=10, bsc_p=0.0, bsc_p_dec=0.0, channel='t-dist', code_rate_k=1, code_rate_n=3, dec_act='linear', dec_kernel_size=5, dec_lr=0.0001, dec_num_layer=5, dec_num_unit=100, dec_rnn='gru', decoder='TurboAE_rate3_cnn', demod_lr=0.005, demod_num_layer=1, demod_num_unit=20, dropout=0.0, enc_act='elu', enc_clipping='both', enc_grad_limit=0.01, enc_kernel_size=5, enc_lr=0.0001, enc_num_layer=2, enc_num_unit=100, enc_quantize_level=2, enc_rnn='gru', enc_truncate_limit=0, enc_value_limit=1.0, encoder='TurboAE_rate3_cnn', extrinsic=1, focal_alpha=1.0, focal_gamma=0.0, img_size=10, init_nw_weight='./models/dta_steq2_cnn2_cnn5_enctrain2_dectrainneg15_2.pt', is_interleave=1, is_k_same_code=False, is_parallel=1, is_same_interleaver=1, is_variable_block_len=False, joint_train=0, k_same_code=2, lambda_maxBCE=0.01, loss='bce', mod_lr=0.005, mod_num_layer=1, mod_num_unit=20, mod_pc='block_power', mod_rate=2, momentum=0.9, no_code_norm=False, no_cuda=False, num_ber_puncture=5, num_block=50000, num_epoch=0, num_iter_ft=5, num_iteration=6, num_train_dec=5, num_train_demod=5, num_train_enc=1, num_train_mod=1, optimizer='adam', precompute_norm_stats=True, print_pos_ber=False, print_pos_power=False, print_test_traj=True, radar_power=5.0, radar_prob=0.05, rec_quantize=False, rec_quantize_level=2, rec_quantize_limit=1.0, snr_points=12, snr_test_end=4.0, snr_test_start=-1.5, test_channel_mode='block_norm_ste', test_ratio=1, train_channel_mode='block_norm_ste', train_dec_channel_high=2.0, train_dec_channel_low=-1.5, train_enc_channel_high=2.0, train_enc_channel_low=2.0, vv=3.0)
using random interleaver [26 86  2 55 75 93 16 73 54 95 53 92 78 13  7 30 22 24 33  8 43 62  3 71
 45 48  6 99 82 76 60 80 90 68 51 27 18 56 63 74  1 61 42 41  4 15 17 40
 38  5 91 59  0 34 28 50 11 35 23 52 10 31 66 57 79 85 32 84 14 89 19 29
 49 97 98 69 20 94 72 77 25 37 81 46 39 65 58 12 88 70 87 36 21 83  9 96
 67 64 47 44] [18 29 64 92 72 87  5 15 12 17 61 76  9 78 80  7 33  6 37 74 79  1 45 28
 60 52 25 39 97 44 16 55 83 49 22 70 47  4 82 94 53 66 26 84 31 63  8 75
 98 57 71 99 86 96 69 24 30 13 40 56 68 95 81 19 38 91 54 32 51 85 11 89
 90 36 65 88 41 14 27 50 20 46 67 35 62  2 59 23 58 43 10  0 73 21 77 42
  3 93 48 34]
Channel_AE(
  (enc): ENC_interCNN(
    (enc_cnn_1): DataParallel(
      (module): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(1, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
    )
    (enc_cnn_2): DataParallel(
      (module): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(1, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
    )
    (enc_cnn_3): DataParallel(
      (module): SameShapeConv1d(
        (cnns): ModuleList(
          (0): Conv1d(1, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
        )
      )
    )
    (enc_linear_1): DataParallel(
      (module): Linear(in_features=100, out_features=1, bias=True)
    )
    (enc_linear_2): DataParallel(
      (module): Linear(in_features=100, out_features=1, bias=True)
    )
    (enc_linear_3): DataParallel(
      (module): Linear(in_features=100, out_features=1, bias=True)
    )
    (interleaver): Interleaver()
  )
  (dec): DEC_LargeCNN(
    (interleaver): Interleaver()
    (deinterleaver): DeInterleaver()
    (dec1_cnns): ModuleList(
      (0): DataParallel(
        (module): SameShapeConv1d(
          (cnns): ModuleList(
            (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (3): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (4): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          )
        )
      )
      (1): DataParallel(
        (module): SameShapeConv1d(
          (cnns): ModuleList(
            (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (3): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (4): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          )
        )
      )
      (2): DataParallel(
        (module): SameShapeConv1d(
          (cnns): ModuleList(
            (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (3): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (4): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          )
        )
      )
      (3): DataParallel(
        (module): SameShapeConv1d(
          (cnns): ModuleList(
            (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (3): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (4): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          )
        )
      )
      (4): DataParallel(
        (module): SameShapeConv1d(
          (cnns): ModuleList(
            (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (3): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (4): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          )
        )
      )
      (5): DataParallel(
        (module): SameShapeConv1d(
          (cnns): ModuleList(
            (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (3): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (4): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          )
        )
      )
    )
    (dec2_cnns): ModuleList(
      (0): DataParallel(
        (module): SameShapeConv1d(
          (cnns): ModuleList(
            (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (3): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (4): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          )
        )
      )
      (1): DataParallel(
        (module): SameShapeConv1d(
          (cnns): ModuleList(
            (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (3): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (4): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          )
        )
      )
      (2): DataParallel(
        (module): SameShapeConv1d(
          (cnns): ModuleList(
            (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (3): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (4): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          )
        )
      )
      (3): DataParallel(
        (module): SameShapeConv1d(
          (cnns): ModuleList(
            (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (3): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (4): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          )
        )
      )
      (4): DataParallel(
        (module): SameShapeConv1d(
          (cnns): ModuleList(
            (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (3): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (4): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          )
        )
      )
      (5): DataParallel(
        (module): SameShapeConv1d(
          (cnns): ModuleList(
            (0): Conv1d(7, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (1): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (2): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (3): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
            (4): Conv1d(100, 100, kernel_size=(5,), stride=(1,), padding=(2,))
          )
        )
      )
    )
    (dec1_outputs): ModuleList(
      (0): DataParallel(
        (module): Linear(in_features=100, out_features=5, bias=True)
      )
      (1): DataParallel(
        (module): Linear(in_features=100, out_features=5, bias=True)
      )
      (2): DataParallel(
        (module): Linear(in_features=100, out_features=5, bias=True)
      )
      (3): DataParallel(
        (module): Linear(in_features=100, out_features=5, bias=True)
      )
      (4): DataParallel(
        (module): Linear(in_features=100, out_features=5, bias=True)
      )
      (5): DataParallel(
        (module): Linear(in_features=100, out_features=5, bias=True)
      )
    )
    (dec2_outputs): ModuleList(
      (0): DataParallel(
        (module): Linear(in_features=100, out_features=5, bias=True)
      )
      (1): DataParallel(
        (module): Linear(in_features=100, out_features=5, bias=True)
      )
      (2): DataParallel(
        (module): Linear(in_features=100, out_features=5, bias=True)
      )
      (3): DataParallel(
        (module): Linear(in_features=100, out_features=5, bias=True)
      )
      (4): DataParallel(
        (module): Linear(in_features=100, out_features=5, bias=True)
      )
      (5): DataParallel(
        (module): Linear(in_features=100, out_features=1, bias=True)
      )
    )
  )
)
test loss trajectory []
test ber trajectory []
total epoch 0
saved model ./tmp/torch_model_220912.pt
Precomputing norm stats
Pre-computed norm statistics mean  tensor([-0.0217], device='cuda:0') std  tensor([0.5114], device='cuda:0')
SNRS [-1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0]
testing snr -1.5
Using atn
tensor([[[ 0.1681, -0.8589, -0.3395],
         [ 0.3174,  0.4464,  0.7115],
         [-0.9886, -0.4196,  0.0996],
         ...,
         [-0.0517,  0.0475,  0.7421],
         [ 1.4493,  0.9843, -0.3338],
         [ 0.1051,  0.6958,  1.0137]],

        [[-3.0730,  1.3569, -1.6967],
         [-1.6048,  0.2185,  0.1527],
         [ 2.4385,  0.7410,  0.0132],
         ...,
         [ 0.1354, -3.5987, -0.6813],
         [ 0.8432,  0.7305,  0.5322],
         [-0.6801,  0.2338,  1.0535]],

        [[-0.1029, -0.0776, -0.9513],
         [-1.0678,  0.0984,  3.5070],
         [ 0.0476, -1.8660,  0.6384],
         ...,
         [ 0.8132, -0.8134, -0.3413],
         [-1.8675, -1.3714,  0.1133],
         [ 0.5704,  0.6918,  1.6326]],

        ...,

        [[-0.6484, -0.7036, -0.4170],
         [-0.3355,  0.7156, -1.5936],
         [ 0.3764,  1.0101, -0.3302],
         ...,
         [ 0.2947, -1.3324,  1.0061],
         [-1.9270, -0.5295,  0.6246],
         [-0.2983,  0.6714,  1.0021]],

        [[-1.2973,  0.0091,  4.6528],
         [-0.5493, -0.9033, -0.2217],
         [-1.2009, -0.4507,  0.0539],
         ...,
         [ 0.7743,  0.3256,  0.4341],
         [-0.3138, -0.7243, -1.0978],
         [ 0.0720,  2.0435, -0.0106]],

        [[-0.2909,  0.7010, -0.8751],
         [-0.3909,  1.3747, -1.0313],
         [ 0.9935, -0.2114,  0.3243],
         ...,
         [ 0.2494,  0.0456, -0.6807],
         [ 0.1606, -1.8729, -2.6680],
         [-0.3355, -1.0162,  0.8420]]])
Using atn
tensor([[[ 2.0509e-01,  1.3852e-01, -2.8821e+00],
         [-8.2160e-01,  4.4056e-01,  9.9637e-02],
         [ 3.2080e-01,  7.1462e-01, -1.5434e-02],
         ...,
         [ 1.0864e+00,  2.4204e-01, -2.0141e-01],
         [-1.2936e-01, -3.6119e-01,  5.7634e-01],
         [-1.4371e-01, -1.2351e-01, -3.1092e+00]],

        [[-4.3504e-01, -1.0912e-01,  5.9831e-01],
         [ 1.1838e+00,  6.4602e-02, -7.8589e-01],
         [ 1.9943e+00, -8.6028e-01,  4.5561e-01],
         ...,
         [ 1.7262e+00,  4.1654e+00, -2.7218e+00],
         [-1.0283e+00, -1.5670e-01, -1.8121e+00],
         [-6.0677e-01,  7.3589e-01,  6.5624e-01]],

        [[-2.5243e+00, -1.3872e+00, -4.5932e-01],
         [ 1.4789e-01, -8.9819e-01, -1.0473e-03],
         [ 1.8086e-01, -1.0803e+00, -1.3267e+00],
         ...,
         [ 6.1046e-01, -1.1100e+00,  1.7774e+00],
         [-3.1413e-01, -6.6406e-02, -5.7261e-01],
         [-1.8643e-01,  5.1081e-01,  1.3266e+00]],

        ...,

        [[-4.4112e-01,  2.6903e-01,  3.1814e-02],
         [-1.6110e-01,  6.1933e-01, -7.1507e-01],
         [-8.8099e-01, -1.6865e-02,  1.3632e+00],
         ...,
         [ 1.7514e-01,  5.6389e-01,  8.6392e-01],
         [ 1.1029e+00, -4.4369e-01,  2.8197e-01],
         [-4.7944e-01, -1.5137e+00, -9.7243e-01]],

        [[ 2.9068e+00,  1.8952e-01,  3.6586e-01],
         [ 3.2156e-01,  4.7602e-01, -2.3918e+00],
         [-1.8892e-01,  1.1405e+00, -2.2129e+00],
         ...,
         [-5.6649e+00,  9.9637e-02,  1.0413e+00],
         [ 7.5175e-02,  5.5271e-02,  5.0746e-01],
         [ 5.0221e-01, -6.9226e-01,  4.6149e-02]],

        [[ 5.4191e-01, -6.3273e-01, -1.1021e+00],
         [ 2.5588e-01, -2.4535e+00,  1.9247e-01],
         [ 1.0462e+00,  1.2122e+00, -7.1116e-01],
         ...,
         [-8.2670e-01,  2.6608e-01,  5.9614e-01],
         [-1.5849e+00, -5.2821e-01, -1.4668e+00],
         [-3.6912e-01,  2.5324e-01,  2.8416e-01]]])
Using atn
tensor([[[ 0.3301,  0.5547, -1.6942],
         [ 0.0390,  0.0990,  0.3866],
         [ 0.1175,  0.2784,  0.3333],
         ...,
         [ 0.7134,  1.1329,  0.1609],
         [-0.0494, -0.3999, -0.5786],
         [-1.2909, -0.8182,  0.1981]],

        [[ 0.6961,  0.1733,  0.4840],
         [ 0.5833,  0.0827, -0.1126],
         [-0.8426, -0.5765, -0.3726],
         ...,
         [ 0.0958, -0.4864,  0.2430],
         [-0.2547,  0.2920,  0.4008],
         [-0.2853, -0.9843, -0.4572]],

        [[-0.2672, -0.1914, -0.6094],
         [-0.2422, -2.2869,  0.5701],
         [ 2.1647, -0.3128, -0.5926],
         ...,
         [-0.2738,  1.3581, -0.2105],
         [ 0.7370, -0.1327, -0.4752],
         [ 1.5687, -1.5887, -0.4977]],

        ...,

        [[-0.7422,  0.1510, -0.0564],
         [-0.5093, -0.2796,  0.2884],
         [ 0.2882,  0.7958, -0.1150],
         ...,
         [ 0.8202,  0.9976,  0.5004],
         [-0.2142, -0.3482,  0.2951],
         [-0.5933,  0.6049,  0.5369]],

        [[ 0.3197, -0.6017,  0.5565],
         [ 0.1016,  0.1384, -0.2644],
         [-1.7247, -0.0419,  0.4017],
         ...,
         [-0.5223, -0.0874,  0.0050],
         [ 0.2408, -0.5592, -1.0059],
         [ 0.2691,  0.7690,  1.4088]],

        [[ 0.2965, -0.2429,  0.5669],
         [ 0.8038, -2.0827,  1.0314],
         [ 2.7865, -2.2545, -0.3910],
         ...,
         [ 0.3819,  0.7792,  0.4899],
         [-1.2311, -1.3242,  1.0290],
         [-0.7671,  0.1183,  1.0463]]])
Using atn
tensor([[[-4.5781e-01, -6.9580e-01,  2.8346e+00],
         [-2.9912e-01,  1.4048e+00,  2.9943e-01],
         [ 1.4170e-01, -9.9507e-01, -8.5441e-01],
         ...,
         [ 3.5590e-01,  5.5294e-01, -2.0584e-01],
         [-2.9473e-01, -1.5147e+00, -1.0294e-01],
         [-2.3379e-01,  3.6831e-01, -2.2789e-01]],

        [[ 1.1540e-01,  3.8603e-01, -7.2377e-02],
         [-5.1161e-01,  9.5556e-01, -6.0243e-01],
         [ 1.0853e+00,  7.4878e-01,  6.9492e-01],
         ...,
         [ 1.2292e+00,  9.3723e-01, -1.1489e-01],
         [-1.3598e-02,  4.7153e-01,  8.2164e+00],
         [-1.7914e-01, -4.7946e-01,  1.4848e-01]],

        [[-5.1480e-01, -5.7970e-01,  4.4397e-01],
         [-1.2680e-01,  2.0899e+00, -8.2366e-01],
         [ 4.7676e-01, -3.3272e-01, -2.2831e-01],
         ...,
         [ 9.6977e-01,  5.6476e-01, -7.0878e-01],
         [ 1.0811e+00, -1.9089e-01,  6.2034e-03],
         [-2.0729e+00,  2.7945e-01, -1.9423e-01]],

        ...,

        [[ 8.6085e-01,  2.5247e+00, -5.0229e-01],
         [-4.4169e-01, -1.8404e+00,  2.5309e-01],
         [-7.3995e-02,  4.4501e-01, -2.6818e+00],
         ...,
         [ 2.0204e-01,  1.9359e-01, -5.9064e-01],
         [ 2.2137e-01,  1.8383e-01, -7.9216e-01],
         [ 1.6030e+00,  5.8056e-01,  4.2385e-02]],

        [[ 5.3706e-01, -1.5730e+00,  1.2503e+00],
         [-2.0013e-01, -1.4106e-01, -7.5057e-01],
         [-3.4630e-01,  1.1148e+00,  1.1133e+00],
         ...,
         [-2.9754e-01,  2.6845e-01,  7.3919e-01],
         [ 5.5304e-01,  1.7282e+00, -9.2746e-01],
         [-1.8181e+00, -1.4073e+00, -3.3905e-01]],

        [[ 8.4987e-02,  3.3364e-01,  8.7205e-02],
         [-3.1838e+00,  1.3310e+00, -8.6225e-01],
         [ 4.4790e-01,  2.9830e-01,  3.4282e+00],
         ...,
         [ 6.6776e-01, -2.7048e+00,  1.6497e+00],
         [-9.6146e-01,  2.7031e+00, -2.5867e-01],
         [ 1.0646e-01, -1.9510e-01, -1.5502e+00]]])
Using atn
tensor([[[-1.3531e-02, -9.4763e-01, -5.9666e-01],
         [-1.7589e-01,  1.4127e+00, -1.4360e-01],
         [-7.5961e-02, -7.6758e-02, -1.5789e+00],
         ...,
         [-3.3141e+00, -7.3226e-01,  2.1136e-03],
         [ 6.1652e-01,  4.4349e-02, -2.9330e-01],
         [ 3.5975e+00, -3.0005e-01,  5.2709e-01]],

        [[ 1.2977e+00, -6.9184e-01, -2.4861e-02],
         [ 1.9398e+00,  6.4808e-01, -2.1455e-01],
         [ 1.4117e+00,  1.7886e-01, -1.6492e-01],
         ...,
         [ 1.7433e+00, -4.0215e-01,  2.5150e-01],
         [-7.8698e-01,  1.9978e-01, -1.0184e+00],
         [ 1.1680e+00, -1.7012e-01, -2.1310e-01]],

        [[ 2.5173e-01, -1.8854e+00,  1.7318e-01],
         [-1.6789e+00,  6.9360e-02,  3.9079e-01],
         [ 1.2729e+00,  6.8027e-01,  5.3473e-01],
         ...,
         [ 1.3987e+00,  3.3137e-01,  9.0166e-01],
         [-3.1146e-01,  1.5971e-01, -2.0978e-03],
         [-2.9533e+00, -1.8703e+00, -2.3046e-01]],

        ...,

        [[-9.4745e-01, -6.4898e-01,  4.1547e-01],
         [ 6.5677e-01,  4.2042e-01, -5.1455e-01],
         [-1.9449e-01, -1.8607e-01, -4.8454e-01],
         ...,
         [ 5.6431e-01,  1.1463e+00,  1.2007e+00],
         [ 1.0329e-01,  1.4077e+00,  8.8525e-01],
         [ 2.6308e-01,  2.9096e-01, -1.3940e-01]],

        [[ 7.8389e-02,  2.1964e-01, -3.8451e+00],
         [ 1.2753e+00, -1.4215e+00, -2.4186e-01],
         [-5.3944e-01,  1.2260e+00, -8.2766e-01],
         ...,
         [-5.3812e-02, -2.1963e+00,  1.4627e-01],
         [ 3.2163e-01,  3.5103e-01,  4.5879e-01],
         [-8.1306e-03,  1.3719e-01,  5.9742e-01]],

        [[-1.0957e-01, -1.5868e+00, -4.7710e-01],
         [-8.1450e-01, -9.4358e-01, -9.6272e-01],
         [-6.4197e-01,  7.9163e-02,  4.0346e-01],
         ...,
         [ 4.8454e-01,  1.1471e-01, -3.5346e-03],
         [ 2.6367e-02, -7.7193e-01,  1.1859e+00],
         [ 2.6458e-01, -8.7829e-02, -4.7595e-01]]])
Using atn
tensor([[[ 0.7734,  0.4661, -0.6999],
         [ 0.9563,  0.3147, -0.0429],
         [-2.6601, -0.2633, -0.2202],
         ...,
         [ 1.1153, -0.1975, -0.2893],
         [ 0.8665,  0.4046, -0.4461],
         [ 0.1955,  0.5122,  0.3682]],

        [[-0.9592, -0.0353, -1.3574],
         [ 0.2947,  0.6690, -1.0622],
         [-0.0480,  0.6549,  0.6133],
         ...,
         [ 0.1139,  0.9492,  0.1009],
         [-1.1237, -0.9563,  0.9116],
         [ 1.4799,  0.1928, -0.6637]],

        [[ 0.3199, -0.2032,  0.4524],
         [ 0.8954,  0.9000, -0.4294],
         [-0.1369,  1.1648,  0.2106],
         ...,
         [-0.1924,  0.1474, -0.1969],
         [ 1.1641, -0.7916, -0.4436],
         [-1.0303,  0.4315, -0.5582]],

        ...,

        [[ 0.0937, -0.2343, -0.1830],
         [ 0.0357, -0.4678, -2.0895],
         [-0.5311,  0.5228,  1.1897],
         ...,
         [-2.6462, -0.1338,  0.0243],
         [ 1.8632, -0.6628,  0.0378],
         [-1.2811,  0.7757, -2.0507]],

        [[ 0.7600, -1.4243, -1.5158],
         [-0.0312, -0.7665,  0.7732],
         [ 0.9693,  0.3193,  1.6897],
         ...,
         [ 0.3513,  1.0921,  0.7409],
         [-2.6270,  0.0855, -0.1107],
         [-1.4882,  1.1092,  0.5253]],

        [[ 0.0128,  1.3721, -0.7284],
         [ 0.0718, -0.6449,  0.8523],
         [-2.0058, -1.9303, -0.2209],
         ...,
         [ 0.8854,  0.1074, -0.5305],
         [-0.7828, -0.0289,  0.8351],
         [-0.8145, -0.8329,  0.9920]]])
Using atn
tensor([[[ 0.5610, -4.6654, -0.6050],
         [ 0.6584,  1.0968, -1.3270],
         [ 0.9172, -0.3443, -2.3676],
         ...,
         [-1.8256, -0.2703,  0.1177],
         [ 0.5294, -0.6692, -0.2152],
         [-1.0430,  0.7162,  2.3894]],

        [[-0.0751, -0.1079,  0.5647],
         [-0.1604,  0.4708, -0.7809],
         [ 0.0122,  0.4846,  0.6799],
         ...,
         [-0.1667,  0.4173, -0.0159],
         [ 3.5832,  0.9942, -0.2769],
         [-0.8553, -0.0604,  1.5363]],

        [[ 0.7528, -0.4366,  2.7209],
         [-0.7250, -1.0654, -3.2703],
         [ 0.6928, -1.1592,  0.5108],
         ...,
         [ 0.2101, -2.7318,  0.8454],
         [ 0.2674, -2.4493,  1.0778],
         [ 0.4517,  0.9304,  0.3018]],

        ...,

        [[-0.9345,  1.6697,  0.1278],
         [ 0.1745,  0.5299,  0.3099],
         [ 0.1569, -0.3813, -0.4873],
         ...,
         [-0.2220,  0.3234, -0.0167],
         [-0.7316, -0.3561,  0.2745],
         [-0.3546, -1.8399, -0.6787]],

        [[ 0.8646, -2.7310, -0.0852],
         [ 0.1212, -0.6083,  0.3899],
         [ 0.4444, -0.4219,  0.6879],
         ...,
         [-0.3954,  0.3548, -0.3062],
         [-0.5097, -1.2940, -0.7863],
         [-4.1033, -0.0482,  0.2937]],

        [[ 0.5137,  1.3358, -0.3005],
         [ 0.5221, -0.0808,  0.5854],
         [-0.2453, -0.1634, -1.0464],
         ...,
         [-1.2790,  0.5955,  0.7658],
         [ 0.8503, -0.3524, -1.2740],
         [-1.1900, -0.2812, -1.4168]]])
Using atn
tensor([[[-7.9771e-01,  2.0699e+00,  2.6849e-01],
         [ 2.7481e-01, -1.5383e+00, -6.4574e-01],
         [ 5.3204e-01, -3.6575e-01, -4.3602e-01],
         ...,
         [ 1.0937e-01,  6.6660e-01, -7.5890e-01],
         [ 3.8086e-02, -2.6092e-01,  1.1386e+00],
         [-1.6446e+00, -5.3294e-01, -3.6483e-01]],

        [[-1.0463e+00,  1.1894e+00, -1.5895e-01],
         [-6.9941e+00,  9.1122e-01, -6.8698e-01],
         [-5.7392e-01, -2.1966e+00, -1.4148e+00],
         ...,
         [ 7.9609e-01,  1.4804e+00, -7.0054e-01],
         [ 2.5255e-01, -6.6256e-01,  5.9803e-01],
         [ 5.4467e-01,  2.6066e-01,  5.4060e-01]],

        [[-2.0597e-01,  2.1368e+00, -6.0801e-01],
         [-2.5439e-02,  3.2649e-01, -5.4579e-01],
         [ 5.4492e-01, -7.3674e-01,  1.5860e-02],
         ...,
         [ 7.4174e-01,  2.1645e-01,  5.1203e-01],
         [-2.2348e-02,  5.3703e-01,  1.1750e-01],
         [-9.3516e-01,  5.2883e-01,  2.3295e-01]],

        ...,

        [[ 2.5418e-04,  4.9322e-01, -1.6442e-01],
         [-3.0911e+00, -6.4501e-01, -8.1677e-02],
         [-4.3657e-01, -4.6912e-01, -3.7543e-01],
         ...,
         [-7.8688e-01,  6.9757e-02, -2.4535e-01],
         [-7.5880e-01, -1.0333e+00, -1.1577e+00],
         [ 2.2199e-03, -4.8239e-01, -6.6800e-02]],

        [[ 1.0452e+00, -3.9906e-01,  5.3033e-01],
         [ 1.0848e+00, -1.9743e-02,  1.5275e+00],
         [ 8.5174e-01,  9.3063e-01, -2.1093e-01],
         ...,
         [-1.3215e+00, -1.1921e+00,  2.3598e-01],
         [ 2.5782e-01,  1.3406e+00, -1.1256e+00],
         [ 5.0399e-01, -5.7864e-01, -1.2251e+00]],

        [[ 2.3995e-01, -2.0972e-01, -2.6322e-01],
         [-7.0973e-01,  7.6677e-01,  2.8948e-01],
         [-4.2582e-02, -3.3623e-01, -1.4064e+00],
         ...,
         [-1.5904e+00, -1.3195e+00, -2.5101e+00],
         [-2.9689e-01, -1.6468e-02,  9.8423e-01],
         [ 1.3125e+00, -1.0078e-02,  9.3636e-01]]])
Using atn
tensor([[[-1.0590,  0.3172, -0.0375],
         [-0.6897,  0.2751,  1.3926],
         [-0.1671,  2.1778,  0.1852],
         ...,
         [-0.5163,  3.3757,  0.5724],
         [ 0.9737,  0.4737,  0.0561],
         [-0.0720,  0.0916,  0.7323]],

        [[-1.0738,  1.4373,  0.4445],
         [ 0.5803,  1.1421,  0.2953],
         [-0.2413,  8.1325,  0.3988],
         ...,
         [ 0.5118,  0.3502, -0.0870],
         [ 0.2425, -0.3547, -0.3862],
         [ 0.6269, -0.4296, -0.9690]],

        [[ 0.1599,  0.3531,  0.1901],
         [ 0.4620, -0.6394, -2.1758],
         [-0.7464,  1.0970,  1.1230],
         ...,
         [-0.2877,  0.1253, -0.0972],
         [-0.1150,  1.5279, -0.2751],
         [-0.4745, -0.3336,  0.7757]],

        ...,

        [[-0.5984,  1.6323, -0.2005],
         [-0.4187, -1.5623, -0.5698],
         [-0.3642,  0.2105,  0.4367],
         ...,
         [ 0.3794,  0.4585,  0.1220],
         [ 0.6952,  0.5659,  1.2396],
         [-0.3311,  1.2798,  0.5369]],

        [[-1.3264, -0.0338,  1.2256],
         [-0.6431, -0.3268, -0.3002],
         [ 0.7085,  0.4717, -0.8626],
         ...,
         [ 0.1790,  0.8944, -0.6607],
         [-0.3120, -0.5757,  0.6993],
         [-0.2667,  0.2640, -0.4531]],

        [[ 0.2178, -0.4550,  0.0394],
         [ 0.2734,  0.0276, -0.0604],
         [ 4.3045,  0.0201, -0.5781],
         ...,
         [ 0.3383,  0.5324, -1.5717],
         [ 0.5343,  1.1053, -1.7944],
         [ 4.0463,  0.1340, -0.3384]]])
Using atn
tensor([[[-2.5811, -1.5626,  0.5514],
         [-0.8076,  0.8497, -1.6554],
         [-0.1864,  1.4971,  0.3227],
         ...,
         [-0.1567,  0.7088,  0.3224],
         [ 2.6360, -0.5969,  0.7397],
         [ 1.3221,  0.9066, -0.1512]],

        [[ 1.6332,  0.0544, -0.6657],
         [-0.8978, -0.1942, -0.7022],
         [-0.6331, -1.4449,  0.2898],
         ...,
         [ 0.6794,  0.1757,  0.3761],
         [ 0.7805, -0.1860, -1.9416],
         [-0.0063,  0.6134,  0.2206]],

        [[ 0.3356,  1.3093,  0.8166],
         [ 0.1667,  0.5676,  0.1241],
         [-1.1923, -0.7542, -1.8021],
         ...,
         [ 0.0191,  0.9256,  1.8492],
         [ 0.5733, -0.0688, -1.8253],
         [ 0.3613, -0.0700, -0.0916]],

        ...,

        [[ 0.4572,  2.5807,  1.1852],
         [-0.3061, -0.2236,  0.4825],
         [-2.6094,  1.8155,  0.9723],
         ...,
         [ 0.0645,  0.5470,  0.6744],
         [ 0.8228, -0.3274,  0.5912],
         [-1.2563, -0.2217,  0.2874]],

        [[ 0.4767,  1.2736, -1.1483],
         [ 2.0067, -3.1739, -1.2361],
         [ 0.3941, -0.2314, -0.6401],
         ...,
         [-0.0977,  0.6487, -1.1687],
         [ 0.5063, -0.4172,  0.0120],
         [ 1.2620,  2.9790, -0.9480]],

        [[-0.0133,  1.5871,  0.0207],
         [ 0.3135, -0.7743, -0.3261],
         [ 0.0658,  1.1889,  0.1150],
         ...,
         [-0.8174, -0.5359,  0.4626],
         [-0.3518,  0.2506,  0.8364],
         [ 0.0380, -0.3872,  0.2838]]])
Using atn
tensor([[[ 1.4936,  0.4175,  0.6730],
         [-0.8202,  1.0073, -0.6443],
         [-0.3394, -0.6949, -0.2857],
         ...,
         [-0.8096, -0.7874,  0.1000],
         [-2.7138, -2.0366,  0.9530],
         [-0.1399,  0.8633,  0.5614]],

        [[-0.4906, -2.4667, -1.2764],
         [ 0.2700, -0.3298, -1.0541],
         [ 0.1920, -0.7345,  0.2882],
         ...,
         [-0.4153,  0.2142,  0.3327],
         [-0.4712, -0.0446,  0.7192],
         [-0.1277,  0.0073, -0.0503]],

        [[ 0.3485, -0.8027, -0.1992],
         [-1.6759, -1.1134,  1.4886],
         [ 0.2693, -0.8538,  1.6612],
         ...,
         [ 0.3287, -0.3637, -0.6328],
         [ 0.1322, -0.3914, -0.0507],
         [-0.6391, -0.8488,  0.0940]],

        ...,

        [[-0.1551, -1.4234,  3.6565],
         [ 0.3388,  2.6721, -0.2198],
         [ 1.9960, -0.8112,  0.5739],
         ...,
         [ 0.0312,  0.1009,  0.1671],
         [-3.0988, -0.2967, -0.9860],
         [ 0.0950,  0.2348, -0.1570]],

        [[-0.3155, -0.2363, -0.4353],
         [-0.2564, -0.8368,  0.4161],
         [ 0.3586, -0.6285, -0.3173],
         ...,
         [ 0.2465, -0.7115, -0.2736],
         [ 0.0437,  0.1748,  0.7749],
         [ 0.0758, -0.2130,  1.0575]],

        [[-0.3199, -0.7864,  0.7787],
         [-0.4839,  0.1898,  1.4755],
         [-0.4380, -0.0048, -0.0498],
         ...,
         [-1.1440, -0.9350, -0.3480],
         [ 0.1601, -0.2075,  0.3034],
         [-0.5366,  0.5202, -2.2259]]])
Using atn
tensor([[[ 7.6123e-01, -3.0027e-01,  3.6599e-01],
         [ 8.0748e-01,  1.7432e+00,  4.6702e-01],
         [-5.9661e-01, -5.7801e-01,  8.3829e-01],
         ...,
         [-1.4685e-01, -5.4675e-01, -1.3492e-01],
         [-9.0847e-01,  1.3312e+00,  5.7734e+00],
         [ 8.9756e-02, -1.6637e-01, -2.6877e-01]],

        [[ 1.2578e+00, -3.3482e-01,  1.9102e-01],
         [-1.6642e-01,  2.4330e-02, -2.0868e+00],
         [-4.3036e-01,  2.1951e-01, -1.1076e+00],
         ...,
         [-4.2114e+00,  3.1992e-01,  7.6672e-02],
         [-3.4438e-01,  9.9689e-01,  1.8575e+00],
         [ 1.6402e+00, -6.6046e-01,  7.4945e-01]],

        [[ 8.1047e-01,  6.2889e-02, -3.0685e-01],
         [-2.1439e-01,  1.8435e-01,  4.4980e-01],
         [-2.4175e+00, -3.0174e-01,  5.0580e-01],
         ...,
         [ 3.3867e-01, -1.2645e+00, -1.2118e+00],
         [ 5.9903e-01, -3.2560e-01,  9.0788e-01],
         [-7.9845e-01,  1.0431e+00,  7.4379e-01]],

        ...,

        [[ 3.6912e-01,  5.0657e-01,  5.7851e-01],
         [-2.2895e+00,  2.4977e+00,  6.7127e-01],
         [-1.1737e+00, -1.9685e-01, -1.6450e+00],
         ...,
         [-8.9443e-01, -1.2876e+00,  2.3380e+00],
         [-2.6278e+00,  7.7175e-01,  1.3430e+00],
         [-5.6917e-01,  3.1042e-02, -4.5815e-02]],

        [[ 4.6878e-02, -6.0593e-02,  9.4317e-02],
         [ 1.1764e-01, -1.3782e-02, -1.3709e+00],
         [ 1.5987e-01,  5.8680e+00, -1.1080e-01],
         ...,
         [-7.5181e-02,  7.4553e-01,  7.7669e-02],
         [-4.5295e-01,  2.6437e-01, -6.4929e-02],
         [ 5.9330e-01, -5.6223e-01,  1.1650e+00]],

        [[-1.6255e+00,  5.2516e-01, -6.2356e-01],
         [-6.0577e-02,  1.0296e+00,  1.0502e+00],
         [-2.4405e-01,  3.1152e-01, -1.9187e+00],
         ...,
         [-7.2513e-01,  4.1965e-01,  1.2876e+00],
         [-5.8630e-01, -7.8960e-01, -1.6390e-02],
         [-4.6141e-03,  3.6919e-01, -1.0483e-01]]])
Using atn
tensor([[[-0.2379, -0.1856, -1.3377],
         [ 0.3219,  0.7197, -0.1853],
         [-0.3865, -0.2195,  2.0368],
         ...,
         [-0.3261, -0.2158,  0.5600],
         [-1.1693,  0.4960, -0.0041],
         [ 0.2231, -0.6957, -2.7000]],

        [[-2.0541,  0.5723, -0.2479],
         [-0.2329,  0.0829,  0.1792],
         [-2.3769,  0.7892,  1.7323],
         ...,
         [-0.1454,  0.1081, -0.9473],
         [-0.2160,  0.6720,  0.4908],
         [-0.9291, -0.7681, -1.1138]],

        [[ 0.8790,  0.5467, -0.0953],
         [-0.7666,  0.5627,  0.5034],
         [-0.0181,  1.7220,  0.2525],
         ...,
         [-0.6112, -1.9963,  0.7406],
         [ 1.1534, -1.3781,  0.0441],
         [ 0.6341, -0.1120,  1.0809]],

        ...,

        [[-0.1046, -0.8373,  0.2939],
         [-0.1528,  0.7995, -0.1102],
         [-0.4117, -0.2946,  0.0884],
         ...,
         [-0.7813, -0.6266, -0.6948],
         [ 0.1254,  1.1726,  0.6104],
         [-0.1112,  3.5590,  0.7298]],

        [[ 0.1540,  0.8641,  0.0287],
         [-0.8163, -2.5911, -1.4621],
         [ 1.3111, -0.1582, -0.7429],
         ...,
         [ 0.1125, -0.9861,  2.8534],
         [-0.0991,  1.6273,  0.9938],
         [-0.3073,  0.0961, -0.6210]],

        [[ 0.6313,  0.2851, -0.7588],
         [ 0.1376,  0.2274,  0.3641],
         [-0.1071,  1.3576,  0.5372],
         ...,
         [-2.2095, -0.1124, -0.0894],
         [-0.6709, -0.5422, -0.7003],
         [-0.3460, -0.2702,  1.5917]]])
Using atn
tensor([[[ 0.5932, -0.1568, -0.9863],
         [-1.8002, -0.9354, -1.5167],
         [-2.7161, -0.7903,  0.6636],
         ...,
         [-0.2958, -0.7878,  1.1548],
         [ 0.2550,  0.6382, -0.1473],
         [ 0.0397,  0.0076, -0.0504]],

        [[ 0.7019, -1.1332,  1.0585],
         [-0.4386, -0.2699,  1.7680],
         [-1.0245, -0.4801, -1.6866],
         ...,
         [-0.5543, -1.2634,  0.2493],
         [-1.5694,  1.2563, -0.9840],
         [ 0.1288, -1.3753, -2.4247]],

        [[-1.1661,  0.6265,  0.0215],
         [ 0.7175, -0.1598,  0.2992],
         [-0.2184,  0.4342, -1.3564],
         ...,
         [-0.1296, -3.2415, -0.2376],
         [-0.1983,  0.1378, -0.8676],
         [-0.0546, -0.3514, -0.2491]],

        ...,

        [[ 0.1266, -2.7173,  1.0775],
         [ 0.6056,  0.3578,  1.0152],
         [-1.9423, -0.0453, -1.2382],
         ...,
         [-0.2016, -0.2944,  0.4870],
         [-1.6256, -5.7424, -0.5751],
         [-0.4384,  0.1573,  1.2440]],

        [[ 0.1427,  1.5219,  0.8533],
         [-3.4902,  0.2841, -0.3969],
         [ 0.2638, -0.0425,  1.1408],
         ...,
         [ 1.1322, -0.9967,  0.4962],
         [ 0.1056, -0.6531, -1.4303],
         [-1.5370,  0.8513, -0.1828]],

        [[-1.4322, -1.1685, -0.0475],
         [ 0.2685,  0.7192, -0.2880],
         [ 0.1183, -0.4126,  1.4768],
         ...,
         [ 0.8606, -0.3145, -0.4816],
         [ 0.7277,  0.0677,  1.4120],
         [ 0.3856,  1.2399,  0.0544]]])
Using atn
tensor([[[ 0.2534, -0.1495, -1.1330],
         [-0.1580,  0.5422, -2.7198],
         [-0.4869, -0.4881, -0.4257],
         ...,
         [ 0.3572, -0.4603,  1.3716],
         [ 0.4389, -1.6152,  0.8034],
         [ 1.3124, -3.9857, -1.9440]],

        [[-0.9976,  0.1755, -0.7277],
         [-0.8611, -1.4684,  1.4625],
         [ 1.0854,  0.1476,  1.2630],
         ...,
         [-0.4514, -3.1476, -1.0511],
         [ 0.1589, -1.2139, -1.1501],
         [ 0.6901, -0.4262,  4.7883]],

        [[-1.9845,  0.8324,  0.2552],
         [-0.0441,  0.3292,  0.9666],
         [-0.6896, -0.1135, -2.4603],
         ...,
         [ 0.1812, -0.5372,  0.4612],
         [-0.6472,  0.0700,  3.3465],
         [ 0.1268,  0.3487, -0.6003]],

        ...,

        [[ 0.5491,  0.1786,  0.2841],
         [ 0.8768,  1.7121, -0.7683],
         [-0.7095,  0.0768,  0.4057],
         ...,
         [-0.6628,  0.4137, -0.0320],
         [ 0.2368,  0.3687,  1.6742],
         [ 0.7271, -0.3266, -0.3140]],

        [[-0.0614, -1.5836,  0.6085],
         [-0.7036,  0.5317,  1.3480],
         [-0.1037,  0.5220,  0.1715],
         ...,
         [ 0.8822, -0.3155,  0.0937],
         [ 0.9009,  0.5403, -0.0185],
         [-0.1615,  0.9771, -1.0449]],

        [[-0.4955,  0.0467,  0.5182],
         [-0.3396,  0.0166,  0.3193],
         [-0.7686, -9.5338,  0.0589],
         ...,
         [ 1.9001, -0.3534, -0.2089],
         [-1.3981,  2.2659, -1.0026],
         [-0.4782, -0.2290, -0.4689]]])
Using atn
tensor([[[ 3.5498e-01,  5.8288e-01, -1.4802e+00],
         [ 8.1820e-02, -2.9428e+00, -5.8152e-01],
         [-3.9354e-01, -5.7059e-01, -5.2828e-01],
         ...,
         [ 6.5409e-01,  2.2288e+00,  8.7083e-02],
         [-1.4846e-01,  4.0012e-01,  5.3625e-02],
         [ 4.0530e-01,  5.2113e-01,  3.9613e-01]],

        [[ 3.4384e-01,  4.4683e-01,  1.3375e+00],
         [-5.7351e-01, -8.3973e-01,  6.0817e-01],
         [ 1.7985e-01, -1.1454e-01,  8.6861e-02],
         ...,
         [ 2.0005e-01, -1.0324e+00,  9.7677e-02],
         [-7.5631e-01,  1.7578e-02,  8.3099e-01],
         [-1.5387e+00,  9.2889e-01,  2.3244e-01]],

        [[-5.5663e-01,  8.8480e-01, -1.1119e-01],
         [ 9.1358e-01,  5.0139e-01,  1.0049e+00],
         [-1.0000e+00,  3.8497e-03, -1.8866e-01],
         ...,
         [-1.7181e-01, -2.9599e-01, -8.5241e-01],
         [ 4.7856e-01,  4.4366e-01,  2.7415e-01],
         [ 1.6984e+00,  2.8208e-01, -6.4785e-01]],

        ...,

        [[ 2.9234e-02,  5.0900e-01, -8.1027e-01],
         [-5.8074e-01, -2.8523e+00,  2.0266e-01],
         [ 3.5540e-02,  3.3282e-01,  1.3276e-01],
         ...,
         [-6.8900e-01,  2.9663e-01, -1.1661e+00],
         [-4.9126e-01, -4.3291e-01, -2.0128e+00],
         [ 8.3248e-01, -3.1794e-02,  3.3554e-01]],

        [[ 7.7228e-01,  4.5408e-01,  1.1911e+00],
         [-7.8898e-01, -5.8777e-01,  1.4303e+00],
         [-6.6197e-01,  5.6711e-01,  1.0536e-01],
         ...,
         [-2.8388e+00, -1.3774e-01, -5.0030e-01],
         [ 6.0423e-01,  5.9180e-02, -6.9116e-01],
         [-1.0373e-01, -6.3931e-01,  2.0500e+00]],

        [[ 7.0545e-01,  7.7524e-02, -5.8947e-01],
         [-7.0099e-01, -1.1425e+00, -4.3962e-01],
         [-5.7329e-01, -1.4594e-01, -5.5905e-01],
         ...,
         [ 3.3734e-02, -3.3859e+00, -1.0726e+00],
         [ 8.7670e-01,  3.5902e-01,  2.4445e-02],
         [-4.1031e+00,  4.5994e-02,  8.2034e-01]]])
Using atn
tensor([[[-0.7311,  0.7295, -1.0705],
         [-0.6136,  0.7338, -0.1265],
         [-0.4984, -0.2024, -0.8126],
         ...,
         [ 0.4902,  0.0144,  1.5872],
         [-0.2531, -0.5633, -0.4919],
         [-0.6295,  5.3073, -0.3383]],

        [[-0.3952, -0.1523, -1.0802],
         [ 0.2313, -0.1022,  1.3785],
         [-0.4897,  0.3744,  3.8129],
         ...,
         [-1.1135,  0.3766,  0.8212],
         [-0.0760,  0.7413, -0.4879],
         [-0.1847, -2.1579,  1.4186]],

        [[ 1.2928, -0.0852, -1.2132],
         [-0.1854, -2.2458, -0.6215],
         [-0.5274,  0.8470, -0.3956],
         ...,
         [ 0.4314,  1.8516,  1.7201],
         [ 1.4118,  0.1218, -0.5703],
         [-0.7035,  0.1494,  1.0408]],

        ...,

        [[-0.2622,  1.2049, -1.7875],
         [-0.2960,  0.9524, -0.8021],
         [-0.5472,  0.6273, -0.2922],
         ...,
         [-0.6386, -1.1787,  1.0621],
         [-0.0213, -0.1147, -0.3714],
         [ 0.0546,  0.2510, -0.3007]],

        [[-0.1154, -2.8493, -0.1589],
         [ 0.6626, -0.5152, -1.0760],
         [ 0.5229, -3.5249,  2.1205],
         ...,
         [-1.2359, -0.4586,  1.1884],
         [-2.4095, -0.4898,  0.1226],
         [-0.1592, -0.6329, -0.6889]],

        [[-0.0598, -1.6279,  0.8291],
         [-0.5006,  0.2987, -1.6449],
         [ 0.0444, -0.1022, -0.2036],
         ...,
         [-0.5170, -0.1153,  0.4236],
         [ 1.1059,  0.3682,  0.4840],
         [-0.5533,  1.4197,  0.1416]]])
Using atn
tensor([[[-0.3156,  0.7774,  1.1119],
         [ 0.9922,  0.0192, -0.0128],
         [ 0.6068, -0.0098,  0.5290],
         ...,
         [ 0.9217, -0.2076, -3.8513],
         [ 0.4015,  0.4160, -0.3910],
         [ 0.6104,  0.5660, -0.0701]],

        [[-2.1335,  0.5577,  1.8951],
         [ 0.6459, -0.2908,  1.5011],
         [ 0.6395,  0.6010,  0.6601],
         ...,
         [ 0.2765,  0.2714, -0.5518],
         [ 1.1789, -1.5322, -0.2915],
         [ 0.2068, -1.4883, -1.5876]],

        [[-1.1538, -0.4349, -0.7652],
         [ 0.4898, -0.3985,  0.5173],
         [ 0.1856,  0.2370,  0.0680],
         ...,
         [-0.7176, -1.3053,  1.0288],
         [-0.1370,  0.4449,  0.4371],
         [ 0.1420, -1.4207, -0.0161]],

        ...,

        [[ 0.3923,  1.2908,  1.2536],
         [-0.1228,  0.8393,  0.8135],
         [ 1.3464,  0.4618,  0.5756],
         ...,
         [-0.1373,  0.4021,  0.3806],
         [-0.1164, -1.4946,  0.9487],
         [-0.0613,  0.7479, -0.5017]],

        [[-0.1401, -0.3168,  0.0206],
         [ 0.4657,  0.1603,  0.0198],
         [-0.0525, -0.2439, -0.7044],
         ...,
         [ 0.3319,  0.4150, -1.0570],
         [ 0.9311,  0.6651, -1.1804],
         [-0.3484,  0.1842, -1.0408]],

        [[-0.4838,  0.1444,  0.6814],
         [ 0.6763, -0.4460,  1.4541],
         [ 0.0979, -0.7112, -0.3272],
         ...,
         [-2.5271, -0.4823, -0.1339],
         [ 0.7619, -0.7037,  0.0181],
         [-0.6287, -1.8966, -0.1203]]])
Using atn
tensor([[[-0.4187, -1.3622,  0.5265],
         [ 0.0959,  0.6884, -1.3463],
         [ 0.3016,  2.3333,  1.0677],
         ...,
         [ 0.4263, -2.0628, -0.0386],
         [ 0.3163, -0.6699, -0.1821],
         [-0.5191, -0.1069,  0.1531]],

        [[-0.1774, -0.0954, -0.0475],
         [-0.6397, -1.1781,  2.3913],
         [ 0.6712,  0.0366,  1.1880],
         ...,
         [-0.9571, -0.0634, -0.9634],
         [ 0.1351, -0.0124,  0.2791],
         [-0.6051, -0.7566, -0.3952]],

        [[-0.5973, -0.3569, -1.2367],
         [ 0.3974, -0.5751,  1.4556],
         [-0.8039, -0.4581, -0.4369],
         ...,
         [ 1.1485,  0.8059, -1.4874],
         [ 0.0826,  1.1893, -1.3187],
         [-0.3764, -0.7394,  0.6719]],

        ...,

        [[ 0.7061, -0.2025,  0.2634],
         [-0.6380,  1.2298,  0.9523],
         [-0.5470, -0.4257,  2.7245],
         ...,
         [ 0.0428, -2.0727, -0.3890],
         [ 0.6525,  0.0899,  0.1259],
         [-2.7590, -0.7316, -0.9325]],

        [[ 0.4278,  1.3946, -0.9240],
         [ 0.9994, -0.1339, -0.4014],
         [ 0.2192, -0.1479,  1.0296],
         ...,
         [-0.0386, -0.7232,  0.5281],
         [-4.0665,  0.8430,  0.4304],
         [ 0.5373, -3.0766, -0.0351]],

        [[ 1.1999,  1.2368,  0.9726],
         [-2.2081, -0.8045, -0.3525],
         [-0.0956,  0.9378, -0.4728],
         ...,
         [ 0.1101,  0.4797,  0.9278],
         [ 0.1952,  0.4058,  1.3167],
         [ 1.4946,  0.6151, -0.9624]]])
Using atn
tensor([[[-0.0825, -2.0905, -0.4013],
         [-0.4948, -0.7555,  0.1724],
         [-1.7991, -0.8348, -0.9905],
         ...,
         [-0.0404,  0.1024,  0.7070],
         [-0.3897, -0.0682,  0.8477],
         [ 1.1168, -1.2868, -1.2652]],

        [[-0.5549,  1.8955, -0.2628],
         [-0.5529, -0.7460, -1.9577],
         [-0.6243,  1.6023,  0.0822],
         ...,
         [-3.8545,  0.6172, -0.9036],
         [ 0.5889,  0.7536,  0.2538],
         [-0.1170,  0.7744,  0.3077]],

        [[ 0.1742,  0.3858, -0.2393],
         [ 0.5881,  0.0629,  1.7665],
         [-0.8410, -0.2652,  0.3343],
         ...,
         [ 0.2856,  1.9547, -0.4931],
         [-0.4731, -2.2490, -1.1538],
         [-0.3460,  0.8625, -0.8749]],

        ...,

        [[-3.4491,  0.4103,  0.3836],
         [-0.0610, -3.1517, -0.0099],
         [ 0.6600,  0.3447, -0.7370],
         ...,
         [-0.3892, -0.5351, -1.1914],
         [ 0.2190,  1.1583,  1.8746],
         [ 0.0384, -0.7205, -0.2287]],

        [[ 1.5888, -0.2265,  0.9729],
         [ 0.6927,  0.1124, -0.5326],
         [ 0.8320, -0.5839, -0.4148],
         ...,
         [ 0.0828, -0.8791,  0.6318],
         [-0.1668, -0.1674, -0.3795],
         [-0.4140,  0.1315, -0.9358]],

        [[ 5.3381, -0.2381,  0.5604],
         [-0.2623, -0.7786,  0.5706],
         [-0.3970, -0.0333, -1.9656],
         ...,
         [ 1.6766, -0.1533,  0.3572],
         [ 0.2445, -0.0245,  0.0852],
         [-0.8086,  0.2362, -1.8291]]])
Using atn
tensor([[[ 3.4734e-01, -4.3651e-01, -1.2800e+00],
         [-4.5035e-01,  2.2878e-01,  4.4895e-01],
         [ 2.9254e-01, -9.2588e-02, -1.8169e-02],
         ...,
         [ 1.7909e+00, -2.7533e+00,  3.3377e-01],
         [-8.0956e-03,  3.0666e+00, -2.3818e-01],
         [ 7.8626e-01, -1.0895e-01,  6.5733e-01]],

        [[ 7.6269e-01, -5.4204e-01,  8.5011e-01],
         [-6.3667e-01, -1.3387e+00, -9.9899e-01],
         [-8.6077e-01, -8.0076e-01,  6.4912e-02],
         ...,
         [ 1.0996e-01, -5.7458e-01,  5.6526e-02],
         [ 3.4800e-01, -8.4434e-02,  3.8678e-01],
         [-1.7262e-01, -1.4487e+00, -4.0658e-01]],

        [[ 3.9239e-01,  1.6365e-01, -5.9574e-01],
         [ 1.5109e-01, -1.6408e-01, -1.0038e+00],
         [ 2.4694e+00, -1.0212e-01, -1.0203e+00],
         ...,
         [ 3.0631e-02, -9.2944e-01, -7.5927e-01],
         [-2.0724e-01,  2.1042e-01,  1.4313e+00],
         [ 5.9772e-01, -6.1069e-01, -8.9965e-01]],

        ...,

        [[-4.7635e-01, -8.8466e-01, -7.4213e-01],
         [-7.2090e-01,  2.9225e+00,  6.2048e-01],
         [-7.0209e-01, -1.3898e-01,  1.2120e-01],
         ...,
         [ 6.1798e-02,  4.2064e-02, -9.4176e-01],
         [ 1.7366e+00, -1.0776e-01,  8.5967e-01],
         [ 2.9923e+00,  1.8100e+00, -1.4104e-01]],

        [[-6.8493e-01, -2.1642e-01, -9.5879e-01],
         [-1.5561e-01, -6.3129e-01,  8.7654e-02],
         [-3.2339e-01,  1.0984e-02, -8.3225e+00],
         ...,
         [ 6.7585e-01,  1.4538e+00, -3.8800e-02],
         [ 8.0171e-01, -1.0168e+00, -3.0378e-01],
         [-1.0281e-01,  2.8124e-01, -4.6024e-01]],

        [[-2.9005e-01,  9.9549e-01, -2.4834e-01],
         [-8.9798e-01, -4.9028e-01,  1.0180e-01],
         [ 3.3361e+00,  7.9134e-01, -4.2280e-01],
         ...,
         [ 6.6541e-01, -9.5648e-01, -9.5098e-01],
         [ 2.5472e-01, -7.7365e-01, -7.9750e-01],
         [-4.1028e-01, -4.9135e-01, -4.0428e-01]]])
Using atn
tensor([[[-3.3607e-02,  1.1596e+00, -4.1834e-01],
         [ 4.2575e-01,  1.3753e-01,  5.8205e-01],
         [-1.6164e+00,  1.6281e+00,  6.6987e-01],
         ...,
         [-1.0735e-01,  8.0433e-01, -6.1969e-02],
         [-1.4330e+00,  1.0379e+00, -1.7325e+00],
         [-6.7291e-02,  1.4347e+00, -3.6169e-01]],

        [[-1.1928e+00,  1.3160e+00, -2.3191e-01],
         [-3.8364e-01,  8.2743e-01, -6.4634e-01],
         [ 2.2903e-01, -3.4823e-01,  1.5192e+00],
         ...,
         [ 1.9168e-01, -1.7032e-01,  2.8131e-01],
         [-1.6418e+00,  2.1900e+00, -1.4704e+00],
         [ 7.8359e-01,  3.2510e-01,  3.0260e-01]],

        [[ 4.5598e-01, -9.1584e-01,  9.4792e-01],
         [-1.5862e-01,  1.6627e-01,  7.6884e-02],
         [-8.3443e-01,  8.6908e-01,  1.0650e-03],
         ...,
         [ 1.0770e-01,  9.5009e-01,  3.4321e+00],
         [ 4.9990e-01, -1.4349e+00,  4.2550e-01],
         [ 1.6293e-01, -6.0044e-01, -1.2069e+00]],

        ...,

        [[ 6.5152e-01,  2.4372e-01,  5.7122e-01],
         [ 1.9969e+00,  3.5657e-01,  1.7518e-01],
         [ 6.6178e-01, -1.0845e+00,  8.1502e-01],
         ...,
         [ 1.7439e-01,  4.1502e-01,  1.6295e+00],
         [ 4.3498e-01,  2.9843e-01,  5.8997e-01],
         [ 6.0579e-01,  2.6809e-01,  7.9266e+00]],

        [[ 4.6311e-01,  1.2241e+00,  9.6731e-01],
         [ 1.0703e+00, -4.3627e+00, -4.1336e-02],
         [ 8.2583e-01, -3.2408e-01,  7.4537e-01],
         ...,
         [-2.0583e-01, -1.2098e+00, -2.7486e-01],
         [ 1.5391e-01,  4.0413e-02, -4.9572e-01],
         [-5.9904e-01,  1.0227e+00,  5.6161e-01]],

        [[ 3.9820e-01,  8.8411e-02,  4.3898e-02],
         [-2.4924e-01, -3.5632e-01, -2.6120e-01],
         [-1.0177e+00, -1.8026e-01, -7.5304e-01],
         ...,
         [-4.9883e-01, -2.7097e-01, -9.4681e-02],
         [-6.8981e-01, -1.1076e+00, -9.4064e-01],
         [ 4.6010e-02, -2.6568e-01,  2.0718e-01]]])
Using atn
tensor([[[-0.9053,  0.0832,  0.4843],
         [-1.0810,  0.4758, -0.9798],
         [-4.5296,  0.0599,  0.1718],
         ...,
         [ 0.5670, -0.5402, -0.3338],
         [ 0.0885, -1.2721,  0.2950],
         [ 0.1298, -0.6029, -1.0142]],

        [[ 0.0429, -0.2012, -1.2205],
         [ 0.7656, -1.2348,  0.1916],
         [-0.8141,  2.6249,  0.7213],
         ...,
         [-0.2017,  3.0058, -1.6814],
         [-1.4497, -0.4268,  0.2494],
         [ 0.2629, -1.3863,  0.4712]],

        [[-0.2105,  0.2910, -1.3718],
         [ 0.1401,  0.1128, -0.1266],
         [ 1.9040, -0.4164,  0.7370],
         ...,
         [-1.2600,  0.8178,  0.5344],
         [ 0.2000,  0.6614, -0.3050],
         [-0.6744,  0.5604, -0.2649]],

        ...,

        [[ 0.7236, -0.0273,  0.2834],
         [-0.1164, -0.1014,  1.4829],
         [ 1.2090, -0.4578, -0.0904],
         ...,
         [ 0.6040,  0.7002,  0.4927],
         [-0.0193,  0.5211, -3.6573],
         [-0.1428, -0.3864,  0.4535]],

        [[ 0.8238, -0.0676, -0.1573],
         [-0.4107, -0.8017, -0.4172],
         [-0.3689, -0.2978,  0.7555],
         ...,
         [ 1.4943,  0.7611, -1.2295],
         [ 0.4172, -0.2171, -0.0769],
         [ 1.0325, -0.5821, -2.2259]],

        [[ 0.3497,  0.6358, -0.9359],
         [-1.7281, -0.0224,  0.8637],
         [ 0.1378,  0.1403,  0.4300],
         ...,
         [ 0.6410,  0.2809, -1.4368],
         [ 0.2042,  0.5824, -0.3889],
         [ 0.7981, -0.3583, -0.1873]]])
Using atn
tensor([[[-0.5320, -0.8510, -0.9513],
         [ 0.3916, -0.3261, -0.0518],
         [-0.3324, -0.1028,  0.6265],
         ...,
         [ 2.6268,  0.0655,  2.0458],
         [-2.0879,  0.4602, -0.4057],
         [-1.9613, -0.7228, -0.8045]],

        [[ 0.2804,  0.5935,  0.1861],
         [-0.2249,  1.1921,  0.0741],
         [ 0.1984, -1.5846,  0.5923],
         ...,
         [-0.9093,  2.4765, -0.2376],
         [ 0.4223, -0.2266, -0.3510],
         [ 6.1799,  0.6529, -0.2664]],

        [[-0.2149, -0.3847, -0.6443],
         [-0.5181, -0.2510, -0.2099],
         [ 0.4731, -0.5136, -0.6049],
         ...,
         [ 0.0566,  2.0200, -0.4976],
         [-0.2022, -0.3713,  0.4544],
         [ 0.9252, -1.4247, -0.5919]],

        ...,

        [[-0.7622, -0.2968, -0.2719],
         [ 2.6408,  0.5290,  0.5991],
         [-0.4835,  0.4617, -0.5943],
         ...,
         [-0.6447, -0.4754,  0.4430],
         [-0.5767, -0.4888, -0.5695],
         [ 1.5428,  0.6851,  1.7498]],

        [[-0.2436,  0.7076, -0.1080],
         [ 1.9448,  1.4789, -0.2104],
         [-0.2599,  0.3957, -0.9716],
         ...,
         [ 0.0805, -1.1997,  2.0825],
         [-0.8919, -0.0972, -0.8623],
         [ 6.9833, -0.3863,  0.5823]],

        [[ 2.5874, -0.4749,  0.7010],
         [-0.2454,  2.2936, -0.5994],
         [-0.8114, -4.3574, -0.1506],
         ...,
         [-0.4308, -0.2119,  0.5617],
         [-0.2287, -0.1132,  0.8411],
         [-0.1620,  5.0670,  0.6031]]])
Using atn
tensor([[[ 0.1463, -1.3933,  0.1954],
         [ 1.4750, -0.5740,  0.2657],
         [ 0.1358, -1.6666, -0.1843],
         ...,
         [-0.7865,  0.2903,  0.0478],
         [ 0.6554,  2.0617,  0.5532],
         [ 1.0793,  0.4503, -0.0293]],

        [[-0.9916,  1.3079, -0.6774],
         [-0.3516,  0.0442, -3.9592],
         [ 0.1008,  4.7647, -1.3666],
         ...,
         [ 0.1434, -0.0660,  0.7599],
         [ 0.0084, -0.2910, -0.7442],
         [ 0.1016,  0.5215, -1.1777]],

        [[ 0.0820,  0.1290, -0.6869],
         [ 2.0666,  0.3723,  0.5620],
         [ 0.1928, -1.1762,  1.8401],
         ...,
         [-1.0552, -0.0275,  0.1489],
         [-1.1217, -0.8418, -0.3400],
         [ 0.9420,  0.3543, -0.3959]],

        ...,

        [[-0.0600, -0.0912,  0.4370],
         [-1.1300,  0.0355, -0.5001],
         [-1.1283, -0.3585,  0.1466],
         ...,
         [ 0.0354,  0.5163,  1.1620],
         [ 0.2095,  0.1820,  0.2298],
         [ 0.4167,  0.3710, -1.4008]],

        [[ 0.5532,  0.6635,  0.8487],
         [-0.4262, -0.1904,  1.4590],
         [-0.4971, -0.8080,  2.2222],
         ...,
         [ 0.0495,  1.9558,  1.8878],
         [-0.1296, -0.6701, -0.1014],
         [ 0.0771,  0.6738,  0.2867]],

        [[ 0.0213, -0.8609,  0.1803],
         [ 0.3947, -0.5546,  2.0620],
         [ 0.1981,  0.4509, -0.3651],
         ...,
         [ 1.1569, -0.5684, -0.0843],
         [ 0.5313,  1.1332, -0.7047],
         [ 0.2845,  0.7308, -0.7665]]])
